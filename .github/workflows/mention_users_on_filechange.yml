name: Mention Users on Specific File Change in PR

on:
  pull_request:

jobs:
  mention-users:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      
      - name: Read configuration and mention users
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            
            // Read the configuration file
            const configPath = '.github/notify-config.json';
            const configFile = fs.readFileSync(configPath, 'utf8');
            const config = JSON.parse(configFile);
            
            // Extract PR number
            const prNumber = context.issue.number;
            
            // Async function to handle API calls and logic
            async function run() {
              // Fetch list of files changed in the PR
              const listFilesResponse = await github.rest.pulls.listFiles({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: prNumber,
              });
              const changedFiles = listFilesResponse.data.map(file => file.filename);
              
              let message = "Changes have been detected in:";
              let hasMentionedFiles = false;
              
              // Check if the PR contains changes to the files or folders specified in the configuration
              config.files_to_watch.forEach(item => {
                const isFolder = item.path.endsWith('/');
                changedFiles.forEach(changedFile => {
                  if (isFolder ? changedFile.startsWith(item.path) : changedFile === item.path) {
                    // This means a file in the folder has changed or the specific file has changed
                    if (!hasMentionedFiles) {
                      // First time adding to the message, change the flag
                      hasMentionedFiles = true;
                    }
                    const usersToMention = item.users.join(' ');
                    message += `\n- \`${item.path}\` (Pinging ${usersToMention} for review).`;
                  }
                });
              });
              
              // Post the comment on the PR if there are any files or folders to mention
              if (hasMentionedFiles) {
                await github.rest.issues.createComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: prNumber,
                  body: message
                });
              } else {
                console.log("No configured files or folders were changed in this PR.");
              }
            }
            
            // Execute the async function
            run().catch(err => core.setFailed(`Unhandled error: ${err}`));

